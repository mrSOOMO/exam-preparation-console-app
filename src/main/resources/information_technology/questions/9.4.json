{
  "questions": [
    {
      "section": 9,
      "subsection": 4,
      "question": "Що таке компілятор?",
      "options": [
        "Програма, яка виконує код безпосередньо",
        "Програма, яка перетворює вихідний код у машинний код до його виконання",
        "Програма, яка зв'язує об'єктні файли у виконуваний файл",
        "Програма, яка аналізує та оптимізує виконуваний код"
      ],
      "correctOption": "Програма, яка перетворює вихідний код у машинний код до його виконання"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Що таке інтерпретатор?",
      "options": [
        "Програма, яка перетворює вихідний код у машинний код до його виконання",
        "Програма, яка виконує код безпосередньо, перекладаючи його рядок за рядком",
        "Програма, яка зв'язує об'єктні файли у виконуваний файл",
        "Програма, яка аналізує та оптимізує виконуваний код"
      ],
      "correctOption": "Програма, яка виконує код безпосередньо, перекладаючи його рядок за рядком"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Що таке компоновник?",
      "options": [
        "Програма, яка перетворює вихідний код у машинний код до його виконання",
        "Програма, яка виконує код безпосередньо",
        "Програма, яка зв'язує об'єктні файли у виконуваний файл",
        "Програма, яка аналізує та оптимізує виконуваний код"
      ],
      "correctOption": "Програма, яка зв'язує об'єктні файли у виконуваний файл"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Яка головна відмінність між компілятором і інтерпретатором?",
      "options": [
        "Компілятор виконує код безпосередньо, а інтерпретатор перетворює його у машинний код",
        "Компілятор перетворює вихідний код у машинний код до його виконання, а інтерпретатор виконує код безпосередньо",
        "Компілятор зв'язує об'єктні файли у виконуваний файл, а інтерпретатор перетворює вихідний код у машинний код до його виконання",
        "Компілятор аналізує та оптимізує виконуваний код, а інтерпретатор виконує код безпосередньо"
      ],
      "correctOption": "Компілятор перетворює вихідний код у машинний код до його виконання, а інтерпретатор виконує код безпосередньо"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Які переваги використання компілятора?",
      "options": [
        "Швидкість виконання коду та можливість виявлення помилок до виконання",
        "Можливість виконання коду на різних платформах без змін",
        "Можливість інтерактивного виконання коду та виявлення помилок під час виконання",
        "Простота використання та відсутність потреби в компіляції"
      ],
      "correctOption": "Швидкість виконання коду та можливість виявлення помилок до виконання"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Які переваги використання інтерпретатора?",
      "options": [
        "Швидкість виконання коду та можливість виявлення помилок до виконання",
        "Можливість виконання коду на різних платформах без змін",
        "Можливість інтерактивного виконання коду та виявлення помилок під час виконання",
        "Простота використання та відсутність потреби в компіляції"
      ],
      "correctOption": "Можливість інтерактивного виконання коду та виявлення помилок під час виконання"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Яка роль компоновника в процесі трансляції програм?",
      "options": [
        "Перетворення вихідного коду у машинний код до його виконання",
        "Виконання коду безпосередньо",
        "Зв'язування об'єктних файлів у виконуваний файл",
        "Аналіз та оптимізація виконуваного коду"
      ],
      "correctOption": "Зв'язування об'єктних файлів у виконуваний файл"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Що таке байт-код?",
      "options": [
        "Машинний код, який виконується безпосередньо процесором",
        "Код, який створюється компілятором і виконується інтерпретатором віртуальної машини",
        "Код, який створюється інтерпретатором і виконується безпосередньо",
        "Код, який створюється компоновником для зв'язування об'єктних файлів"
      ],
      "correctOption": "Код, який створюється компілятором і виконується інтерпретатором віртуальної машини"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Яка роль віртуальної машини у виконанні програм?",
      "options": [
        "Віртуальна машина перетворює вихідний код у машинний код до його виконання",
        "Віртуальна машина виконує код безпосередньо",
        "Віртуальна машина виконує байт-код, створений компілятором",
        "Віртуальна машина зв'язує об'єктні файли у виконуваний файл"
      ],
      "correctOption": "Віртуальна машина виконує байт-код, створений компілятором"
    },
    {
      "section": 9,
      "subsection": 4,
      "question": "Яка різниця між JIT-компіляцією та традиційною компіляцією?",
      "options": [
        "JIT-компіляція перетворює код під час виконання, а традиційна компіляція перетворює код до виконання",
        "JIT-компіляція зв'язує об'єктні файли, а традиційна компіляція виконує код безпосередньо",
        "JIT-компіляція виконує код безпосередньо, а традиційна компіляція перетворює код під час виконання",
        "JIT-компіляція оптимізує код після виконання, а традиційна компіляція перетворює код до виконання"
      ],
      "correctOption": "JIT-компіляція перетворює код під час виконання, а традиційна компіляція перетворює код до виконання"
    }
  ]
}
