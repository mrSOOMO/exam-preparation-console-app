{
  "questions": [
    {
      "section": 9,
      "subsection": 2,
      "question": "Що таке функціональне програмування?",
      "options": [
        "Парадигма програмування, яка базується на використанні функцій як основних будівельних блоків програм",
        "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком",
        "Парадигма програмування, яка базується на використанні об'єктів та їх взаємодії",
        "Парадигма програмування, яка реагує на події та зміни стану"
      ],
      "correctOption": "Парадигма програмування, яка базується на використанні функцій як основних будівельних блоків програм"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Що таке логічне програмування?",
      "options": [
        "Парадигма програмування, яка базується на використанні функцій як основних будівельних блоків програм",
        "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком",
        "Парадигма програмування, яка базується на використанні об'єктів та їх взаємодії",
        "Парадигма програмування, яка реагує на події та зміни стану"
      ],
      "correctOption": "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Що таке подійно-орієнтоване програмування?",
      "options": [
        "Парадигма програмування, яка базується на використанні функцій як основних будівельних блоків програм",
        "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком",
        "Парадигма програмування, яка базується на використанні об'єктів та їх взаємодії",
        "Парадигма програмування, яка реагує на події та зміни стану"
      ],
      "correctOption": "Парадигма програмування, яка реагує на події та зміни стану"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Що таке реактивне програмування?",
      "options": [
        "Парадигма програмування, яка базується на використанні функцій як основних будівельних блоків програм",
        "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком",
        "Парадигма програмування, яка реагує на події та асинхронні зміни",
        "Парадигма програмування, яка базується на використанні об'єктів та їх взаємодії"
      ],
      "correctOption": "Парадигма програмування, яка реагує на події та асинхронні зміни"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Що таке узагальнене програмування?",
      "options": [
        "Парадигма програмування, яка базується на використанні шаблонів для створення узагальнених алгоритмів і структур даних",
        "Парадигма програмування, яка використовує логічні вирази для управління програмним потоком",
        "Парадигма програмування, яка базується на використанні об'єктів та їх взаємодії",
        "Парадигма програмування, яка реагує на події та зміни стану"
      ],
      "correctOption": "Парадигма програмування, яка базується на використанні шаблонів для створення узагальнених алгоритмів і структур даних"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Яка основна мета функціонального програмування?",
      "options": [
        "Забезпечення модульності та повторного використання коду",
        "Забезпечення паралельного виконання завдань",
        "Забезпечення чіткої логіки і умов виконання програм",
        "Забезпечення реагування на події та зміни стану системи"
      ],
      "correctOption": "Забезпечення модульності та повторного використання коду"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Яка основна мета логічного програмування?",
      "options": [
        "Забезпечення модульності та повторного використання коду",
        "Забезпечення чіткої логіки і умов виконання програм",
        "Забезпечення паралельного виконання завдань",
        "Забезпечення реагування на події та зміни стану системи"
      ],
      "correctOption": "Забезпечення чіткої логіки і умов виконання програм"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Яка основна мета подійно-орієнтованого програмування?",
      "options": [
        "Забезпечення модульності та повторного використання коду",
        "Забезпечення чіткої логіки і умов виконання програм",
        "Забезпечення паралельного виконання завдань",
        "Забезпечення реагування на події та зміни стану системи"
      ],
      "correctOption": "Забезпечення реагування на події та зміни стану системи"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Яка основна мета реактивного програмування?",
      "options": [
        "Забезпечення модульності та повторного використання коду",
        "Забезпечення чіткої логіки і умов виконання програм",
        "Забезпечення паралельного виконання завдань",
        "Забезпечення реагування на події та асинхронні зміни"
      ],
      "correctOption": "Забезпечення реагування на події та асинхронні зміни"
    },
    {
      "section": 9,
      "subsection": 2,
      "question": "Яка основна мета узагальненого програмування?",
      "options": [
        "Забезпечення модульності та повторного використання коду",
        "Забезпечення чіткої логіки і умов виконання програм",
        "Забезпечення паралельного виконання завдань",
        "Забезпечення створення узагальнених алгоритмів і структур даних"
      ],
      "correctOption": "Забезпечення створення узагальнених алгоритмів і структур даних"
    }
  ]
}
